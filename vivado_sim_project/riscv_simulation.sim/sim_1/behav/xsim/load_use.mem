// Test Case: Memory Access (sw, lw) and Load-Use Hazard
//
// Address | Machine Code | Assembly
//----------------------------------------------------------------
// Setup: x5 = 0x80000000 (메모리 주소), x6 = 123 (저장할 값)
// 0x00:   800002b7       // lui  x5, 0x80000       ; x5 = 0x80000000
// 0x04:   07b00313       // addi x6, x0, 123        ; x6 = 123 (0x7B)
//
// Store & Load
// 0x08:   0062a023       // sw   x6, 0(x5)         ; Memory[0x80000000] = 123
// 0x0c:   0002a383       // lw   x7, 0(x5)         ; x7 = Memory[0x80000000]
//
// Load-Use Hazard Test
// 0x10:   00138413       // addi x8, x7, 1          ; HAZARD: x7값을 바로 사용. x8은 124가 되어야 함.
//
// Verification
// 0x14:   0082a223       // sw   x8, 4(x5)         ; Memory[0x80000004] = 124 (결과 확인용)
// 0x18:   00730463       // beq  x6, x7, 8         ; L1_PASS로 분기 (x6==x7). TAKEN 되어야 함. Target: 0x20
// 0x1c:   00100f13       // addi x30, x0, 1         ; 실패 시 실행됨 (SKIPPED 되어야 함)
//
// 0x20: L1_PASS:
//         07c00493       // addi x9, x0, 124        ; x9 = 124 (비교용)
// 0x24:   00940463       // beq  x8, x9, 8         ; L2_PASS로 분기 (x8==x9). TAKEN 되어야 함. Target: 0x2c
// 0x28:   00100f93       // addi x31, x0, 1         ; 실패 시 실행됨 (SKIPPED 되어야 함)
//
// Halt
// 0x2c: L2_PASS:
//         0000006f       // jal x0, 0               ; 성공 시 무한 루프
800002b7
07b00313
0062a023
0002a383
00138413
0082a223
00730463
00100f13
07c00493
00940463
00100f93
0000006f
